{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","result":{"data":{"deck":{"id":"3804c1a1-1c6e-5a95-8632-d25a3ed2da90","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = myTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"React \\u03BA\\u03B1\\u03B9 BDR\")), mdx(OpeningSlide, {\n    title: \"\\u0395\\u03B9\\u03C3\\u03B1\\u03B3\\u03C9\\u03B3\\u03B9\\u03BA\\u03AD\\u03C2 \\u03C0\\u03BB\\u03B7\\u03C1\\u03BF\\u03C6\\u03BF\\u03C1\\u03AF\\u03B5\\u03C2 \\u03B3\\u03B9\\u03B1 \\u03C4\\u03BF React\",\n    mdxType: \"OpeningSlide\"\n  }), mdx(BackgroundBubbles, {\n    mdxType: \"BackgroundBubbles\"\n  }), mdx(\"hr\", null), mdx(SlideHeadline, {\n    sectionTitle: \"\\u03A4\\u03AC\\u03C3\\u03B5\\u03B9\\u03C2\",\n    mdxType: \"SlideHeadline\"\n  }, \"Downloads\"), mdx(Website, {\n    resetStyles: true,\n    title: \" \\uD83D\\uDDA5  NPM trends\",\n    mdxType: \"Website\"\n  }, mdx(LargeImage, {\n    src: downloadsImg,\n    noShadow: true,\n    mdxType: \"LargeImage\"\n  }), mdx(Credit, {\n    credit: \"React vs Vue vs Angular vs jQuery\",\n    creditLink: \"https://www.npmtrends.com/react-vs-vue-vs-angular-vs-jquery\",\n    mdxType: \"Credit\"\n  })), mdx(\"hr\", null), mdx(SlideHeadline, {\n    sectionTitle: \"\\u03A4\\u03AC\\u03C3\\u03B5\\u03B9\\u03C2\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u0393\\u03BD\\u03CE\\u03BC\\u03B5\\u03C2\"), mdx(Website, {\n    resetStyles: true,\n    title: \" \\uD83D\\uDDA5  Opinions 2019\",\n    mdxType: \"Website\"\n  }, mdx(LargeImage, {\n    src: usageImg,\n    noShadow: true,\n    mdxType: \"LargeImage\"\n  }), mdx(Credit, {\n    credit: \"State of JS 2019\",\n    creditLink: \"https://2019.stateofjs.com/front-end-frameworks/\",\n    mdxType: \"Credit\"\n  })), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u0393\\u03B9\\u03B1\\u03C4\\u03AF \\u03B4\\u03B5\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 framework;\",\n    mdxType: \"SlideHeadline\"\n  }, \"View library\"), mdx(\"p\", null, \"\\u03A4\\u03BF React \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 library \\u03BA\\u03B1\\u03B9 \\u03CC\\u03C7\\u03B9 framework.\"), mdx(\"p\", null, \"\\u0395\\u03AF\\u03BD\\u03B1\\u03B9 \\u03C4\\u03BF View \\u03BA\\u03BF\\u03BC\\u03BC\\u03AC\\u03C4\\u03B9 \\u03B1\\u03C0\\u03CC \\u03C4\\u03B7\\u03BD \\u03B1\\u03C1\\u03C7\\u03B9\\u03C4\\u03B5\\u03BA\\u03C4\\u03BF\\u03BD\\u03B9\\u03BA\\u03AE MVC. \\u0394\\u03B7\\u03BB. \\u03B5\\u03BC\\u03C0\\u03BB\\u03AD\\u03BA\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BC\\u03CC\\u03BD\\u03BF \\u03BC\\u03B5 \\u03C4\\u03BF\\n\\u03BA\\u03BF\\u03BC\\u03BC\\u03AC\\u03C4\\u03B9 \\u03C4\\u03C9\\u03BD \\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03B5\\u03AF\\u03C9\\u03BD \\u03C0\\u03BF\\u03C5 \\u03B5\\u03BC\\u03C6\\u03B1\\u03BD\\u03AF\\u03B6\\u03BF\\u03BD\\u03C4\\u03B1\\u03B9 \\u03C3\\u03C4\\u03BF \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7. \\u039C\\u03B5 \\u03AC\\u03BB\\u03BB\\u03B1 \\u03BB\\u03CC\\u03B3\\u03B9\\u03B1, \\u03BC\\u03B5 \\u03CC,\\u03C4\\u03B9\\n\\u03C3\\u03C7\\u03B5\\u03C4\\u03AF\\u03B6\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BC\\u03B5 \\u03C4\\u03B1 components.\"), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u0393\\u03B9\\u03B1\\u03C4\\u03AF \\u03B4\\u03B5\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 framework;\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u0391\\u03C0\\u03BF\\u03B8\\u03AE\\u03BA\\u03B5\\u03C5\\u03C3\\u03B7 \\u03B4\\u03B5\\u03B4\\u03BF\\u03BC\\u03AD\\u03BD\\u03C9\\u03BD\"), mdx(\"p\", null, \"\\u0395\\u03AF\\u03BD\\u03B1\\u03B9 \\u03B5\\u03C0\\u03B9\\u03BB\\u03BF\\u03B3\\u03AE \\u03C4\\u03BF\\u03C5 \\u03C0\\u03C1\\u03BF\\u03B3\\u03C1\\u03B1\\u03BC\\u03BC\\u03B1\\u03C4\\u03B9\\u03C3\\u03C4\\u03AE \\u03C4\\u03BF \\u03C0\\u03CE\\u03C2 \\u03B8\\u03B1 \\u03B1\\u03C0\\u03BF\\u03B8\\u03B7\\u03BA\\u03B5\\u03CD\\u03B5\\u03B9 \\u03C4\\u03BF state \\u03C4\\u03B7\\u03C2 \\u03B5\\u03C6\\u03B1\\u03C1\\u03BC\\u03BF\\u03B3\\u03AE\\u03C2.\"), mdx(SplitContainer, {\n    mdxType: \"SplitContainer\"\n  }, mdx(Part, {\n    percentageWidth: \"50%\",\n    mdxType: \"Part\"\n  }, mdx(\"p\", null, \"\\u03A0\\u03B9\\u03B8\\u03B1\\u03BD\\u03AD\\u03C2 \\u03BB\\u03CD\\u03C3\\u03B5\\u03B9\\u03C2:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/context.html\"\n  }), \"React Context\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://redux.js.org/tutorials/essentials/part-1-overview-concepts\"\n  }), \"Redux\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and more...\"))), mdx(Part, {\n    percentageWidth: \"50%\",\n    mdxType: \"Part\"\n  }, mdx(\"p\", null, \"Just React or Redux?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/49568073/react-context-vs-react-redux-when-should-i-use-each-one\"\n  }), \"Stack Overflow\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367\"\n  }), \"Post \\u03C4\\u03BF\\u03C5 D.\\nAbramov\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/\"\n  }), \"Post \\u03C4\\u03BF\\u03C5 M.\\nErikson\"))))), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u0393\\u03B9\\u03B1\\u03C4\\u03AF \\u03B4\\u03B5\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 framework;\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u039F\\u03C1\\u03B3\\u03AC\\u03BD\\u03C9\\u03C3\\u03B7 \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03C9\\u03BD\"), mdx(\"p\", null, \"\\u039F \\u03C0\\u03C1\\u03BF\\u03B3\\u03C1\\u03B1\\u03BC\\u03BC\\u03B1\\u03C4\\u03B9\\u03C3\\u03C4\\u03AE\\u03C2 \\u03B5\\u03C0\\u03B9\\u03BB\\u03AD\\u03B3\\u03B5\\u03B9 \\u03C4\\u03B7\\u03BD \\u03BF\\u03C1\\u03B3\\u03AC\\u03BD\\u03C9\\u03C3\\u03B7 \\u03C4\\u03C9\\u03BD \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03C9\\u03BD \\u03C4\\u03BF\\u03C5 project.\"), mdx(\"p\", null, \"\\u03A4\\u03BF \\u03AF\\u03B4\\u03B9\\u03BF \\u03C4\\u03BF React \\u03C0\\u03C1\\u03BF\\u03C4\\u03B5\\u03AF\\u03BD\\u03B5\\u03B9 \\u03BF\\u03BC\\u03B1\\u03B4\\u03BF\\u03C0\\u03BF\\u03AF\\u03B7\\u03C3\\u03B7 \\u03C4\\u03C9\\u03BD \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03C9\\u03BD \\u03BC\\u03B5 \\u03B2\\u03AC\\u03C3\\u03B7 \\u03C4\\u03BF \\u03B5\\u03AF\\u03B4\\u03BF\\u03C2 \\u03C4\\u03BF\\u03C5 \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03BF\\u03C5,\\n\\u03C4\\u03B1 features \\u03AE \\u03C4\\u03B1 routes.  \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/faq-structure.html\"\n  }), \"\\u03A0\\u03B7\\u03B3\\u03AE\")), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u0393\\u03B9\\u03B1\\u03C4\\u03AF \\u03B4\\u03B5\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 framework;\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u039F\\u03C1\\u03B3\\u03AC\\u03BD\\u03C9\\u03C3\\u03B7 \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03C9\\u03BD\"), mdx(SplitContainer, {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: 30\n    },\n    mdxType: \"SplitContainer\"\n  }, mdx(Part, {\n    percentageWidth: \"45%\",\n    mdxType: \"Part\"\n  }, mdx(\"p\", null, \"NextJS\"), mdx(\"img\", {\n    src: nextjsDirImg,\n    style: {\n      width: '100%'\n    }\n  })), mdx(Part, {\n    percentageWidth: \"45%\",\n    mdxType: \"Part\"\n  }, mdx(\"p\", null, \"Redux\"), mdx(\"img\", {\n    src: reduxDirImg,\n    style: {\n      width: '100%'\n    }\n  }))), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u0393\\u03B9\\u03B1\\u03C4\\u03AF \\u03B4\\u03B5\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 framework;\",\n    mdxType: \"SlideHeadline\"\n  }, \"Routing\"), mdx(\"p\", null, \"\\u039F \\u03C0\\u03C1\\u03BF\\u03B3\\u03C1\\u03B1\\u03BC\\u03BC\\u03B1\\u03C4\\u03B9\\u03C3\\u03C4\\u03AE\\u03C2 \\u03B5\\u03C0\\u03B9\\u03BB\\u03AD\\u03B3\\u03B5\\u03B9 \\u03C0\\u03CE\\u03C2 \\u03B8\\u03B1 \\u03C5\\u03BB\\u03BF\\u03C0\\u03BF\\u03B9\\u03AE\\u03C3\\u03B5\\u03B9 \\u03C4\\u03BF routing \\u03C4\\u03B7\\u03C2 \\u03B5\\u03C6\\u03B1\\u03C1\\u03BC\\u03BF\\u03B3\\u03AE\\u03C2.\"), mdx(\"p\", null, \"\\u0394\\u03B7\\u03BC\\u03BF\\u03C6\\u03B9\\u03BB\\u03B5\\u03AF\\u03C2 \\u03B2\\u03B9\\u03B2\\u03BB\\u03B9\\u03BF\\u03B8\\u03AE\\u03BA\\u03B5\\u03C2 \\u03B3\\u03B9\\u03B1 routing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://nextjs.org/\"\n  }), \"NextJS\"), \": file system routing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://reactrouter.com/web/guides/quick-start\"\n  }), \"React Router\"))), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u0393\\u03B9\\u03B1\\u03C4\\u03AF \\u03B4\\u03B5\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 framework;\",\n    mdxType: \"SlideHeadline\"\n  }, \"Static type checking\"), mdx(\"p\", null, \"\\u039F \\u03C0\\u03C1\\u03BF\\u03B3\\u03C1\\u03B1\\u03BC\\u03BC\\u03B1\\u03C4\\u03B9\\u03C3\\u03C4\\u03AE\\u03C2 \\u03B1\\u03BD \\u03BA\\u03B1\\u03B9 \\u03C0\\u03BF\\u03B9\\u03BF \\u03BC\\u03B7\\u03C7\\u03B1\\u03BD\\u03B9\\u03C3\\u03BC\\u03CC \\u03B8\\u03B1 \\u03C7\\u03C1\\u03B7\\u03C3\\u03B9\\u03BC\\u03BF\\u03C0\\u03BF\\u03B9\\u03AE\\u03C3\\u03B5\\u03B9 \\u03B3\\u03B9\\u03B1 type checking.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), \"Typescript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://flow.org/\"\n  }), \"Flow\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/facebook/prop-types\"\n  }), \"PropTypes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u03A4\\u03AF\\u03C0\\u03BF\\u03C4\\u03B1\")), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"React ecosystem\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u03A4\\u03B9 \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9;\"), mdx(\"p\", null, \"\\u0395\\u03C0\\u03B5\\u03B9\\u03B4\\u03AE \\u03C4\\u03BF React \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u03B4\\u03B5\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 opinionated\"), \" \\u03BA\\u03B1\\u03B9 \\u03B4\\u03B5\\u03BD \\u03C0\\u03B5\\u03C1\\u03B9\\u03BB\\u03B1\\u03BC\\u03B2\\u03AC\\u03BD\\u03B5\\u03B9 \\u03C3\\u03C4\\u03BF\\u03BD \\u03BA\\u03CE\\u03B4\\u03B9\\u03BA\\u03B1 \\u03C4\\u03BF\\u03C5\\n\\u03B5\\u03C0\\u03B9\\u03BB\\u03BF\\u03B3\\u03AD\\u03C2 \\u03B3\\u03B9\\u03B1 \\u03CC\\u03C3\\u03B1 \\u03B1\\u03BD\\u03B1\\u03C6\\u03AD\\u03C1\\u03BF\\u03BD\\u03C4\\u03B1\\u03B9, \\u03AD\\u03C7\\u03B5\\u03B9 \\u03B4\\u03B7\\u03BC\\u03B9\\u03BF\\u03C5\\u03C1\\u03B3\\u03B7\\u03B8\\u03B5\\u03AF \\u03AD\\u03BD\\u03B1 \\u03BF\\u03B9\\u03BA\\u03BF\\u03C3\\u03CD\\u03C3\\u03C4\\u03B7\\u03BC\\u03B1 \\u03C0\\u03BF\\u03C5 \\u03C0\\u03B5\\u03C1\\u03B9\\u03BB\\u03B1\\u03BC\\u03B2\\u03AC\\u03BD\\u03B5\\u03B9\\n\\u03AD\\u03BD\\u03B1\\u03BD \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u03BC\\u03B5\\u03B3\\u03AC\\u03BB\\u03BF \\u03B1\\u03C1\\u03B9\\u03B8\\u03BC\\u03CC \\u03B2\\u03B9\\u03B2\\u03BB\\u03B9\\u03BF\\u03B8\\u03B7\\u03BA\\u03CE\\u03BD\"), \" \\u03C0\\u03BF\\u03C5 \\u03B4\\u03BF\\u03C5\\u03BB\\u03B5\\u03CD\\u03BF\\u03C5\\u03BD \\u03BC\\u03B5 React projects \\u03BA\\u03B1\\u03B9 \\u03C3\\u03C5\\u03BD\\u03C4\\u03B7\\u03C1\\u03BF\\u03CD\\u03BD\\u03C4\\u03B1\\u03B9\\n\\u03B1\\u03C0\\u03CC \\u03B4\\u03B9\\u03B1\\u03C6\\u03BF\\u03C1\\u03B5\\u03C4\\u03B9\\u03BA\\u03BF\\u03CD\\u03C2 \\u03C0\\u03C1\\u03BF\\u03B3\\u03C1\\u03B1\\u03BC\\u03BC\\u03B1\\u03C4\\u03B9\\u03C3\\u03C4\\u03AD\\u03C2.\"), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"React ecosystem\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u03A0\\u03CE\\u03C2 \\u03BC\\u03BF\\u03B9\\u03AC\\u03B6\\u03B5\\u03B9 \\u03C4\\u03BF \\u03B1\\u03C0\\u03BF\\u03C4\\u03AD\\u03BB\\u03B5\\u03C3\\u03BC\\u03B1;\"), mdx(\"p\", null, \"\\u038C\\u03C0\\u03C9\\u03C2 \\u03B5\\u03BC\\u03B5\\u03AF\\u03C2 \\u03B8\\u03AD\\u03BB\\u03BF\\u03C5\\u03BC\\u03B5!\"), mdx(\"p\", null, \"\\u0391\\u03C5\\u03C4\\u03CC \\u03C0\\u03BF\\u03C5 \\u03B2\\u03BB\\u03AD\\u03C0\\u03B5\\u03B9 \\u03BF \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03BA\\u03B1\\u03B9 \\u03C4\\u03BF style \\u03C4\\u03C9\\u03BD components \\u03BC\\u03C0\\u03BF\\u03C1\\u03B5\\u03AF \\u03BD\\u03B1 \\u03B2\\u03B1\\u03C3\\u03AF\\u03B6\\u03B5\\u03C4\\u03B1\\u03B9 \\u03C3\\u03B5\\n\\u03B4\\u03B9\\u03BA\\u03CC \\u03BC\\u03B1\\u03C2 design \\u03AE \\u03C3\\u03C4\\u03BF design \\u03BA\\u03AC\\u03C0\\u03BF\\u03B9\\u03B1\\u03C2 \\u03B1\\u03C0\\u03CC \\u03C4\\u03B9\\u03C2 \\u03C0\\u03BF\\u03BB\\u03C5\\u03AC\\u03C1\\u03B9\\u03B8\\u03BC\\u03B5\\u03C2 \\u03B2\\u03B9\\u03B2\\u03BB\\u03B9\\u03BF\\u03B8\\u03AE\\u03BA\\u03B5\\u03C2 \\u03C0\\u03BF\\u03C5\\n\\u03C0\\u03C1\\u03BF\\u03C3\\u03C6\\u03AD\\u03C1\\u03BF\\u03C5\\u03BD components.\"), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"React ecosystem\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u0395\\u03BD\\u03B4\\u03B5\\u03B9\\u03BA\\u03C4\\u03B9\\u03BA\\u03AD\\u03C2 \\u03B2\\u03B9\\u03B2\\u03BB\\u03B9\\u03BF\\u03B8\\u03AE\\u03BA\\u03B5\\u03C2 components\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://material-ui.com/\"\n  }), \"Material-UI\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react-bootstrap.github.io/\"\n  }), \"React\\nBootstrap\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react.semantic-ui.com/elements/divider/\"\n  }), \"React Semantic\\nUI\"), \",\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://rebassjs.org/\"\n  }), \"Rebass\"), \", \\u03BA\\u03BB\\u03C0...\"), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"React ecosystem\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u03A0\\u03B1\\u03C1\\u03AC\\u03B4\\u03B5\\u03B9\\u03B3\\u03BC\\u03B1 Inputs\"), mdx(\"p\", null, \"\\u039C\\u03C0\\u03BF\\u03C1\\u03B5\\u03AF \\u03AD\\u03BD\\u03B1 input \\u03BD\\u03B1 \\u03BC\\u03BF\\u03B9\\u03AC\\u03B6\\u03B5\\u03B9 \\u03CC\\u03C0\\u03C9\\u03C2 \\u03B8\\u03AD\\u03BB\\u03BF\\u03C5\\u03BC\\u03B5:\"), mdx(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'space-between',\n      flexWrap: 'wrap'\n    }\n  }, mdx(\"div\", {\n    style: {\n      width: 300\n    }\n  }, mdx(\"img\", {\n    src: input1Img,\n    style: {\n      width: '100%',\n      margin: 6\n    }\n  })), mdx(\"div\", {\n    style: {\n      width: 600\n    }\n  }, mdx(\"img\", {\n    src: input4Img,\n    style: {\n      width: '100%',\n      margin: 6\n    }\n  }), mdx(\"div\", {\n    style: {\n      width: 300\n    }\n  }, mdx(\"img\", {\n    src: input2Img,\n    style: {\n      width: '100%',\n      margin: 6\n    }\n  })), mdx(\"div\", {\n    style: {\n      width: 300\n    }\n  }, mdx(\"img\", {\n    src: input3Img,\n    style: {\n      width: '100%',\n      margin: 6\n    }\n  })))), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u03A3\\u03B7\\u03BC\\u03B1\\u03BD\\u03C4\\u03B9\\u03BA\\u03AC \\u03B3\\u03B9\\u03B1 \\u03BA\\u03B1\\u03C4\\u03B1\\u03BD\\u03CC\\u03B7\\u03C3\\u03B7\",\n    mdxType: \"SlideHeadline\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/hooks-intro.html\"\n  }), \"Hooks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/state-and-lifecycle.html\"\n  }), \"Components' lifecycle\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/thinking-in-react.html\"\n  }), \"Thinking in React\"))), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u03A0\\u03B1\\u03C1\\u03B1\\u03B4\\u03B5\\u03AF\\u03B3\\u03BC\\u03B1\\u03C4\\u03B1 \\u03BC\\u03B5 \\u03BA\\u03CE\\u03B4\\u03B9\\u03BA\\u03B1\",\n    mdxType: \"SlideHeadline\"\n  }, \"Class component BdrLink\"), mdx(\"hr\", null), mdx(CodeSlide, {\n    mdxType: \"CodeSlide\"\n  }, mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers file=./code_examples/BdrLink1.js\",\n    \"showNumbers\": true,\n    \"file\": \"./code_examples/BdrLink1.js\"\n  }), \"// Component BdrLink\\n\\nimport React, { Component } from 'react';\\nimport { StyleSheet, Text } from 'react-native';\\n\\nclass Link extends Component {\\n\\n  constructor() {\\n    this.super();\\n    ...\\n  }\\n\\n  openURl() { ...  }\\n\\n  render() {\\n    let { label, extraStyle } = this.props;\\n    return (\\n      <Text\\n        selectable\\n        style={[ styles.link, extraStyle ]}\\n        onPress={() => { this.openURl(); }}\\n      >\\n        { label }\\n      </Text>\\n    );\\n  }\\n\\n}\\n\\nconst styles = StyleSheet.create({\\n  link: { ... },\\n});\\n\\nexport default Link;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 6,8,15,34 file=./code_examples/BdrLink1.1.js\",\n    \"showNumbers\": true,\n    \"6,8,15,34\": true,\n    \"file\": \"./code_examples/BdrLink1.1.js\"\n  }), \"// Component BdrLink\\n\\nimport React, { Component } from 'react';\\nimport { StyleSheet, Text } from 'react-native';\\n\\nclass Link extends Component {\\n\\n  constructor() {\\n    this.super();\\n    ...\\n  }\\n\\n  openURl() { ...  }\\n\\n  render() {\\n    let { label, extraStyle } = this.props;\\n    return (\\n      <Text\\n        selectable\\n        style={[ styles.link, extraStyle ]}\\n        onPress={() => { this.openURl(); }}\\n      >\\n        { label }\\n      </Text>\\n    );\\n  }\\n\\n}\\n\\nconst styles = StyleSheet.create({\\n  link: { ... },\\n});\\n\\nexport default Link;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 13,21 file=./code_examples/BdrLink1.1.js\",\n    \"showNumbers\": true,\n    \"13,21\": true,\n    \"file\": \"./code_examples/BdrLink1.1.js\"\n  }), \"// Component BdrLink\\n\\nimport React, { Component } from 'react';\\nimport { StyleSheet, Text } from 'react-native';\\n\\nclass Link extends Component {\\n\\n  constructor() {\\n    this.super();\\n    ...\\n  }\\n\\n  openURl() { ...  }\\n\\n  render() {\\n    let { label, extraStyle } = this.props;\\n    return (\\n      <Text\\n        selectable\\n        style={[ styles.link, extraStyle ]}\\n        onPress={() => { this.openURl(); }}\\n      >\\n        { label }\\n      </Text>\\n    );\\n  }\\n\\n}\\n\\nconst styles = StyleSheet.create({\\n  link: { ... },\\n});\\n\\nexport default Link;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 16,20,30:32 file=./code_examples/BdrLink1.1.js\",\n    \"showNumbers\": true,\n    \"16,20,30:32\": true,\n    \"file\": \"./code_examples/BdrLink1.1.js\"\n  }), \"// Component BdrLink\\n\\nimport React, { Component } from 'react';\\nimport { StyleSheet, Text } from 'react-native';\\n\\nclass Link extends Component {\\n\\n  constructor() {\\n    this.super();\\n    ...\\n  }\\n\\n  openURl() { ...  }\\n\\n  render() {\\n    let { label, extraStyle } = this.props;\\n    return (\\n      <Text\\n        selectable\\n        style={[ styles.link, extraStyle ]}\\n        onPress={() => { this.openURl(); }}\\n      >\\n        { label }\\n      </Text>\\n    );\\n  }\\n\\n}\\n\\nconst styles = StyleSheet.create({\\n  link: { ... },\\n});\\n\\nexport default Link;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 1,7:11,13,20 file=./code_examples/BdrLink2.js\",\n    \"showNumbers\": true,\n    \"1,7:11,13,20\": true,\n    \"file\": \"./code_examples/BdrLink2.js\"\n  }), \"// @flow\\n// Component BdrLink\\nimport React, { Component } from 'react';\\nimport { Linking, StyleSheet, Text } from 'react-native';\\nimport type { TextStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\\n\\ntype Props = {\\n  url: string,\\n  label: string,\\n  extraStyle?: TextStyleProp,\\n};\\n\\nclass Link extends Component<Props> {\\n\\n  openURl() {\\n    ...\\n  }\\n\\n  render() {\\n    let { label, extraStyle } = this.props;\\n\\n    return (\\n      <Text\\n        selectable\\n        style={[ styles.link, extraStyle ]}\\n        onPress={() => { this.openURl(); }}\\n      >\\n        { label }\\n      </Text>\\n    );\\n  }\\n\\n}\\n\\nconst styles = StyleSheet.create({\\n  link: { ...  },\\n});\\n\\nexport default Link;\\n\"))))), mdx(\"hr\", null), mdx(SlideHeadline, {\n    separateLine: true,\n    sectionTitle: \"\\u03A0\\u03B1\\u03C1\\u03B1\\u03B4\\u03B5\\u03AF\\u03B3\\u03BC\\u03B1\\u03C4\\u03B1 \\u03BC\\u03B5 \\u03BA\\u03CE\\u03B4\\u03B9\\u03BA\\u03B1\",\n    mdxType: \"SlideHeadline\"\n  }, \"D. Abramov: Hooks\"), mdx(\"p\", null, \"\\u039F \\u03BA\\u03CE\\u03B4\\u03B9\\u03BA\\u03B1\\u03C2 \\u03C0\\u03BF\\u03C5 \\u03B1\\u03BA\\u03BF\\u03BB\\u03BF\\u03C5\\u03B8\\u03B5\\u03AF \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 \\u03C4\\u03BF \\u03C0\\u03C1\\u03CE\\u03C4\\u03BF \\u03BC\\u03AD\\u03C1\\u03BF\\u03C2 \\u03B1\\u03C0\\u03CC \\u03C4\\u03B7\\u03BD \\u03C0\\u03B1\\u03C1\\u03BF\\u03C5\\u03C3\\u03AF\\u03B1\\u03C3\\u03B7 \\u03C4\\u03C9\\u03BD hooks.\"), mdx(\"p\", null, \"\\u03A0\\u03BB\\u03AE\\u03C1\\u03B7\\u03C2 \\u03C0\\u03B1\\u03C1\\u03BF\\u03C5\\u03C3\\u03AF\\u03B1\\u03C3\\u03B7: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=dpw9EHDh2bM&feature=youtu.be&t=1051&ab_channel=ReactConf\"\n  }), \"ReactConf 2018\")), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx true\",\n    \"metastring\": \"showNumbers file=./code_examples/greeting.class.1.3.js title=\\\"Before Hooks\\\" subtitle=\\\"A class component with state\\\"\",\n    \"showNumbers\": true,\n    \"file\": \"./code_examples/greeting.class.1.3.js\",\n    \"title\": \"\\\"Before\",\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"A\",\n    \"component\": true,\n    \"with\": true,\n    \"state\\\"\": true\n  }), \"import React from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default class Greeting extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      name: \\\"Mary\\\",\\n    };\\n    this.handleNameChange = this.handleNameChange.bind(\\n      this\\n    );\\n  }\\n\\n  handleNameChange(e) {\\n    this.setState({ name: e.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <section>\\n        <Row label=\\\"Name\\\">\\n          <input\\n            value={this.state.name}\\n            onChange={this.handleNameChange}\\n          />\\n        </Row>\\n      </section>\\n    );\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers file=./code_examples/greeting.hooks.1.4.js title=\\\"After Hooks\\\" subtitle=\\\"A function component with state\\\"\",\n    \"showNumbers\": true,\n    \"file\": \"./code_examples/greeting.hooks.1.4.js\",\n    \"title\": \"\\\"After\",\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"A\",\n    \"function\": true,\n    \"component\": true,\n    \"with\": true,\n    \"state\\\"\": true\n  }), \"import React, { useState } from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default function Greeting(props) {\\n  const [name, setName] = useState(\\\"Mary\\\");\\n\\n  function handleNameChange(e) {\\n    setName(e.target.value);\\n  }\\n\\n  return (\\n    <section>\\n      <Row label=\\\"Name\\\">\\n        <input value={name} onChange={handleNameChange} />\\n      </Row>\\n    </section>\\n  );\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx true\",\n    \"metastring\": \"showNumbers 4,5,15,19 file=./code_examples/greeting.class.1.3.js title=\\\"Before Hooks\\\" subtitle=\\\"A class component with state\\\"\",\n    \"showNumbers\": true,\n    \"4,5,15,19\": true,\n    \"file\": \"./code_examples/greeting.class.1.3.js\",\n    \"title\": \"\\\"Before\",\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"A\",\n    \"component\": true,\n    \"with\": true,\n    \"state\\\"\": true\n  }), \"import React from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default class Greeting extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      name: \\\"Mary\\\",\\n    };\\n    this.handleNameChange = this.handleNameChange.bind(\\n      this\\n    );\\n  }\\n\\n  handleNameChange(e) {\\n    this.setState({ name: e.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <section>\\n        <Row label=\\\"Name\\\">\\n          <input\\n            value={this.state.name}\\n            onChange={this.handleNameChange}\\n          />\\n        </Row>\\n      </section>\\n    );\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 4,7,11 file=./code_examples/greeting.hooks.1.4.js title=\\\"After Hooks\\\" subtitle=\\\"A function component with state\\\"\",\n    \"showNumbers\": true,\n    \"4,7,11\": true,\n    \"file\": \"./code_examples/greeting.hooks.1.4.js\",\n    \"title\": \"\\\"After\",\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"A\",\n    \"function\": true,\n    \"component\": true,\n    \"with\": true,\n    \"state\\\"\": true\n  }), \"import React, { useState } from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default function Greeting(props) {\\n  const [name, setName] = useState(\\\"Mary\\\");\\n\\n  function handleNameChange(e) {\\n    setName(e.target.value);\\n  }\\n\\n  return (\\n    <section>\\n      <Row label=\\\"Name\\\">\\n        <input value={name} onChange={handleNameChange} />\\n      </Row>\\n    </section>\\n  );\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 5,7:9,13 file=./code_examples/greeting.class.1.3.js title=\\\"Before Hooks\\\" subtitle=\\\"state has to be an object\\\"\",\n    \"showNumbers\": true,\n    \"5,7:9,13\": true,\n    \"file\": \"./code_examples/greeting.class.1.3.js\",\n    \"title\": \"\\\"Before\",\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"state\",\n    \"has\": true,\n    \"to\": true,\n    \"be\": true,\n    \"an\": true,\n    \"object\\\"\": true\n  }), \"import React from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default class Greeting extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      name: \\\"Mary\\\",\\n    };\\n    this.handleNameChange = this.handleNameChange.bind(\\n      this\\n    );\\n  }\\n\\n  handleNameChange(e) {\\n    this.setState({ name: e.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <section>\\n        <Row label=\\\"Name\\\">\\n          <input\\n            value={this.state.name}\\n            onChange={this.handleNameChange}\\n          />\\n        </Row>\\n      </section>\\n    );\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 5 file=./code_examples/greeting.hooks.1.4.js title=\\\"After Hooks\\\" subtitle=\\\"state could be anything\\\"\",\n    \"showNumbers\": true,\n    \"file\": \"./code_examples/greeting.hooks.1.4.js\",\n    \"title\": \"\\\"After\",\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"state\",\n    \"could\": true,\n    \"be\": true,\n    \"anything\\\"\": true\n  }), \"import React, { useState } from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default function Greeting(props) {\\n  const [name, setName] = useState(\\\"Mary\\\");\\n\\n  function handleNameChange(e) {\\n    setName(e.target.value);\\n  }\\n\\n  return (\\n    <section>\\n      <Row label=\\\"Name\\\">\\n        <input value={name} onChange={handleNameChange} />\\n      </Row>\\n    </section>\\n  );\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 7:12,16,24 file=./code_examples/greeting.class.1.3.js title=\\\"Before Hooks\\\" subtitle=\\\"we read and update the state using this.state and this.setState\\\"\",\n    \"showNumbers\": true,\n    \"7:12,16,24\": true,\n    \"file\": \"./code_examples/greeting.class.1.3.js\",\n    \"title\": \"\\\"Before\",\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"we\",\n    \"read\": true,\n    \"and\": true,\n    \"update\": true,\n    \"the\": true,\n    \"state\": true,\n    \"using\": true,\n    \"this.state\": true,\n    \"this.setState\\\"\": true\n  }), \"import React from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default class Greeting extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      name: \\\"Mary\\\",\\n    };\\n    this.handleNameChange = this.handleNameChange.bind(\\n      this\\n    );\\n  }\\n\\n  handleNameChange(e) {\\n    this.setState({ name: e.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <section>\\n        <Row label=\\\"Name\\\">\\n          <input\\n            value={this.state.name}\\n            onChange={this.handleNameChange}\\n          />\\n        </Row>\\n      </section>\\n    );\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 5,8,14[16:27] file=./code_examples/greeting.hooks.1.4.js title=\\\"After Hooks\\\" subtitle=\\\"the state and the setter are just variables in the function\\\"\",\n    \"showNumbers\": true,\n    \"5,8,14[16:27]\": true,\n    \"file\": \"./code_examples/greeting.hooks.1.4.js\",\n    \"title\": \"\\\"After\",\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"the\",\n    \"state\": true,\n    \"and\": true,\n    \"the\": true,\n    \"setter\": true,\n    \"are\": true,\n    \"just\": true,\n    \"variables\": true,\n    \"in\": true,\n    \"function\\\"\": true\n  }), \"import React, { useState } from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default function Greeting(props) {\\n  const [name, setName] = useState(\\\"Mary\\\");\\n\\n  function handleNameChange(e) {\\n    setName(e.target.value);\\n  }\\n\\n  return (\\n    <section>\\n      <Row label=\\\"Name\\\">\\n        <input value={name} onChange={handleNameChange} />\\n      </Row>\\n    </section>\\n  );\\n}\\n\"))), mdx(Step, {\n    subtitle: \"What is useState exactly? useState is a hook, a function provided by React that lets you hook into React features from your function components\",\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 1[100],31[100] file=./code_examples/greeting.class.1.3.js title=\\\"Before Hooks\\\"\",\n    \"showNumbers\": true,\n    \"1[100],31[100]\": true,\n    \"file\": \"./code_examples/greeting.class.1.3.js\",\n    \"title\": \"\\\"Before\",\n    \"Hooks\\\"\": true\n  }), \"import React from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default class Greeting extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      name: \\\"Mary\\\",\\n    };\\n    this.handleNameChange = this.handleNameChange.bind(\\n      this\\n    );\\n  }\\n\\n  handleNameChange(e) {\\n    this.setState({ name: e.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <section>\\n        <Row label=\\\"Name\\\">\\n          <input\\n            value={this.state.name}\\n            onChange={this.handleNameChange}\\n          />\\n        </Row>\\n      </section>\\n    );\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 1[1:7,15:40],5 file=./code_examples/greeting.hooks.1.4.js title=\\\"After Hooks\\\"\",\n    \"showNumbers\": true,\n    \"1[1:7,15:40],5\": true,\n    \"file\": \"./code_examples/greeting.hooks.1.4.js\",\n    \"title\": \"\\\"After\",\n    \"Hooks\\\"\": true\n  }), \"import React, { useState } from \\\"react\\\";\\nimport Row from \\\"./row\\\";\\n\\nexport default function Greeting(props) {\\n  const [name, setName] = useState(\\\"Mary\\\");\\n\\n  function handleNameChange(e) {\\n    setName(e.target.value);\\n  }\\n\\n  return (\\n    <section>\\n      <Row label=\\\"Name\\\">\\n        <input value={name} onChange={handleNameChange} />\\n      </Row>\\n    </section>\\n  );\\n}\\n\")))), mdx(\"hr\", null), mdx(SlideHeadline, {\n    sectionTitle: \"Redux \\u03C3\\u03C4\\u03BF BDR\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u039A\\u03B1\\u03BB\\u03CD\\u03C8\\u03B5\\u03B9\\u03C2\"), mdx(\"p\", null, \"\\u0393\\u03B9\\u03B1 \\u03BD\\u03B1 \\u03B4\\u03B7\\u03BC\\u03B9\\u03BF\\u03C5\\u03C1\\u03B3\\u03AE\\u03C3\\u03BF\\u03C5\\u03BC\\u03B5 \\u03C4\\u03B7\\u03BD \\u03BF\\u03B8\\u03CC\\u03BD\\u03B7 \\u03BC\\u03B5 \\u03C4\\u03B9\\u03C2 \\u03BA\\u03B1\\u03BB\\u03CD\\u03C8\\u03B5\\u03B9\\u03C2 \\u03C7\\u03C1\\u03B5\\u03B9\\u03B1\\u03C3\\u03C4\\u03AE\\u03BA\\u03B1\\u03BC\\u03B5:\"), mdx(SplitContainer, {\n    mdxType: \"SplitContainer\"\n  }, mdx(Part, {\n    percentageWidth: \"50%\",\n    mdxType: \"Part\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u039A\\u03AC\\u03C0\\u03BF\\u03B9\\u03B1 components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u039A\\u03AC\\u03C0\\u03BF\\u03B9\\u03B1 \\u03AC\\u03BB\\u03BB\\u03B1 containers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Actions\"))), mdx(Part, {\n    percentageWidth: \"50%\",\n    mdxType: \"Part\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u03A3\\u03CD\\u03BD\\u03B4\\u03B5\\u03C3\\u03B7 \\u03BC\\u03B5 \\u03C4\\u03BF store \\u03BC\\u03AD\\u03C3\\u03C9 Redux\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"i18n\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Style\")))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers file=./code_examples/Coverages_container.1.1.js\",\n    \"showNumbers\": true,\n    \"file\": \"./code_examples/Coverages_container.1.1.js\"\n  }), \"// Coverages container\\nimport React from 'react';\\n...\\n\\nclass Coverages extends Screen {\\n\\n  componentDidMount() {\\n    ...\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    ...\\n  }\\n\\n  render() {\\n    ...\\n  }\\n\\n};\\n\\nconst mapStateToProps = state => ({\\n  coverages: state.coverages,\\n  loaders: state.loaders,\\n  userIdentification: state.userIdentification,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n  // thunk creators\\n  getCoverages: (nextAction, token, id) => {\\n    dispatch(actions.toggleLoader('coverages', true));\\n    dispatch(actions.fetchData('coverages', nextAction, token, id));\\n  },\\n});\\n\\nconst exportedCoverages = connect(mapStateToProps, mapDispatchToProps)(Coverages);\\n\\nconst styles = StyleSheet.create({\\n  ...\\n});\\n\\nexport default exportedCoverages;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 2,5,7,11,15,41 file=./code_examples/Coverages_container.1.1.js\",\n    \"showNumbers\": true,\n    \"2,5,7,11,15,41\": true,\n    \"file\": \"./code_examples/Coverages_container.1.1.js\"\n  }), \"// Coverages container\\nimport React from 'react';\\n...\\n\\nclass Coverages extends Screen {\\n\\n  componentDidMount() {\\n    ...\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    ...\\n  }\\n\\n  render() {\\n    ...\\n  }\\n\\n};\\n\\nconst mapStateToProps = state => ({\\n  coverages: state.coverages,\\n  loaders: state.loaders,\\n  userIdentification: state.userIdentification,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n  // thunk creators\\n  getCoverages: (nextAction, token, id) => {\\n    dispatch(actions.toggleLoader('coverages', true));\\n    dispatch(actions.fetchData('coverages', nextAction, token, id));\\n  },\\n});\\n\\nconst exportedCoverages = connect(mapStateToProps, mapDispatchToProps)(Coverages);\\n\\nconst styles = StyleSheet.create({\\n  ...\\n});\\n\\nexport default exportedCoverages;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 21:35 file=./code_examples/Coverages_container.1.1.js\",\n    \"showNumbers\": true,\n    \"21:35\": true,\n    \"file\": \"./code_examples/Coverages_container.1.1.js\"\n  }), \"// Coverages container\\nimport React from 'react';\\n...\\n\\nclass Coverages extends Screen {\\n\\n  componentDidMount() {\\n    ...\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    ...\\n  }\\n\\n  render() {\\n    ...\\n  }\\n\\n};\\n\\nconst mapStateToProps = state => ({\\n  coverages: state.coverages,\\n  loaders: state.loaders,\\n  userIdentification: state.userIdentification,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n  // thunk creators\\n  getCoverages: (nextAction, token, id) => {\\n    dispatch(actions.toggleLoader('coverages', true));\\n    dispatch(actions.fetchData('coverages', nextAction, token, id));\\n  },\\n});\\n\\nconst exportedCoverages = connect(mapStateToProps, mapDispatchToProps)(Coverages);\\n\\nconst styles = StyleSheet.create({\\n  ...\\n});\\n\\nexport default exportedCoverages;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 7:11,23:34 file=./code_examples/Coverages_container.1.2.js\",\n    \"showNumbers\": true,\n    \"7:11,23:34\": true,\n    \"file\": \"./code_examples/Coverages_container.1.2.js\"\n  }), \"// Coverages container\\nimport React from 'react';\\n...\\n\\nclass Coverages extends Screen {\\n\\n  componentDidMount() {\\n    const { id, token } = this.props.userIdentification;\\n\\n    this.props.getCoverages(STORE_COVERAGES, token, id);\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    ...\\n  }\\n\\n  render() {\\n    ...\\n  }\\n\\n};\\n\\nconst mapStateToProps = state => ({\\n  coverages: state.coverages,\\n  loaders: state.loaders,\\n  userIdentification: state.userIdentification,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n  // thunk creators\\n  getCoverages: (nextAction, token, id) => {\\n    dispatch(actions.toggleLoader('coverages', true));\\n    dispatch(actions.fetchData('coverages', nextAction, token, id));\\n  },\\n});\\n\\nconst exportedCoverages = connect(mapStateToProps, mapDispatchToProps)(Coverages);\\n\\nconst styles = StyleSheet.create({\\n  ...\\n});\\n\\nexport default exportedCoverages;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 8,26 file=./code_examples/Coverages_container.1.2.js\",\n    \"showNumbers\": true,\n    \"8,26\": true,\n    \"file\": \"./code_examples/Coverages_container.1.2.js\"\n  }), \"// Coverages container\\nimport React from 'react';\\n...\\n\\nclass Coverages extends Screen {\\n\\n  componentDidMount() {\\n    const { id, token } = this.props.userIdentification;\\n\\n    this.props.getCoverages(STORE_COVERAGES, token, id);\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    ...\\n  }\\n\\n  render() {\\n    ...\\n  }\\n\\n};\\n\\nconst mapStateToProps = state => ({\\n  coverages: state.coverages,\\n  loaders: state.loaders,\\n  userIdentification: state.userIdentification,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n  // thunk creators\\n  getCoverages: (nextAction, token, id) => {\\n    dispatch(actions.toggleLoader('coverages', true));\\n    dispatch(actions.fetchData('coverages', nextAction, token, id));\\n  },\\n});\\n\\nconst exportedCoverages = connect(mapStateToProps, mapDispatchToProps)(Coverages);\\n\\nconst styles = StyleSheet.create({\\n  ...\\n});\\n\\nexport default exportedCoverages;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 10,31 file=./code_examples/Coverages_container.1.2.js\",\n    \"showNumbers\": true,\n    \"10,31\": true,\n    \"file\": \"./code_examples/Coverages_container.1.2.js\"\n  }), \"// Coverages container\\nimport React from 'react';\\n...\\n\\nclass Coverages extends Screen {\\n\\n  componentDidMount() {\\n    const { id, token } = this.props.userIdentification;\\n\\n    this.props.getCoverages(STORE_COVERAGES, token, id);\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    ...\\n  }\\n\\n  render() {\\n    ...\\n  }\\n\\n};\\n\\nconst mapStateToProps = state => ({\\n  coverages: state.coverages,\\n  loaders: state.loaders,\\n  userIdentification: state.userIdentification,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n  // thunk creators\\n  getCoverages: (nextAction, token, id) => {\\n    dispatch(actions.toggleLoader('coverages', true));\\n    dispatch(actions.fetchData('coverages', nextAction, token, id));\\n  },\\n});\\n\\nconst exportedCoverages = connect(mapStateToProps, mapDispatchToProps)(Coverages);\\n\\nconst styles = StyleSheet.create({\\n  ...\\n});\\n\\nexport default exportedCoverages;\\n\")))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 10:58 file=./code_examples/actions_common.1.1.js\",\n    \"showNumbers\": true,\n    \"10:58\": true,\n    \"file\": \"./code_examples/actions_common.1.1.js\"\n  }), \"// actions/common.js\\n\\nexport function storePayload(type, payload = {}) {\\n  return {\\n    type,\\n    payload,\\n  };\\n};\\n\\nexport function fetchData(endpoint, nextAction, token, id) {\\n  return async (dispatch) => {\\n    let response,\\n        headers = setRequestHeaders(endpoint, token), url,\\n        error;\\n\\n    try {\\n      url = constructURL(endpoint, id);\\n      response = await execRequest('GET', url, headers);\\n      let payload = response.payload;\\n\\n      if(response.isOK) {\\n        dispatch(storePayload(nextAction, payload));\\n      }\\n      else {\\n        if(response.status === 401) {\\n          dispatch(storePayload(LOG_OUT));\\n          error = {\\n            ...error_descr['401'],\\n            ...{\\n              extra_data: endpoint,\\n              original: response.payload,\\n            },\\n          };\\n        }\\n        else {\\n          error = {\\n            ...error_descr.request,\\n            ...{\\n              extra_data: endpoint,\\n              original: response.payload,\\n            },\\n          };\\n        }\\n        dispatch(storeError(error));\\n      }\\n      dispatch(toggleLoader(endpoint, false));\\n    } catch(err) {\\n      error = {\\n        ...error_descr.request,\\n        ...{\\n          extra_data: endpoint,\\n          original: { error: err },\\n        },\\n      };\\n      dispatch(storeError(error));\\n    }\\n  };\\n};\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 21:23 file=./code_examples/actions_common.1.1.js\",\n    \"showNumbers\": true,\n    \"21:23\": true,\n    \"file\": \"./code_examples/actions_common.1.1.js\"\n  }), \"// actions/common.js\\n\\nexport function storePayload(type, payload = {}) {\\n  return {\\n    type,\\n    payload,\\n  };\\n};\\n\\nexport function fetchData(endpoint, nextAction, token, id) {\\n  return async (dispatch) => {\\n    let response,\\n        headers = setRequestHeaders(endpoint, token), url,\\n        error;\\n\\n    try {\\n      url = constructURL(endpoint, id);\\n      response = await execRequest('GET', url, headers);\\n      let payload = response.payload;\\n\\n      if(response.isOK) {\\n        dispatch(storePayload(nextAction, payload));\\n      }\\n      else {\\n        if(response.status === 401) {\\n          dispatch(storePayload(LOG_OUT));\\n          error = {\\n            ...error_descr['401'],\\n            ...{\\n              extra_data: endpoint,\\n              original: response.payload,\\n            },\\n          };\\n        }\\n        else {\\n          error = {\\n            ...error_descr.request,\\n            ...{\\n              extra_data: endpoint,\\n              original: response.payload,\\n            },\\n          };\\n        }\\n        dispatch(storeError(error));\\n      }\\n      dispatch(toggleLoader(endpoint, false));\\n    } catch(err) {\\n      error = {\\n        ...error_descr.request,\\n        ...{\\n          extra_data: endpoint,\\n          original: { error: err },\\n        },\\n      };\\n      dispatch(storeError(error));\\n    }\\n  };\\n};\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 3:8 file=./code_examples/actions_common.1.1.js\",\n    \"showNumbers\": true,\n    \"3:8\": true,\n    \"file\": \"./code_examples/actions_common.1.1.js\"\n  }), \"// actions/common.js\\n\\nexport function storePayload(type, payload = {}) {\\n  return {\\n    type,\\n    payload,\\n  };\\n};\\n\\nexport function fetchData(endpoint, nextAction, token, id) {\\n  return async (dispatch) => {\\n    let response,\\n        headers = setRequestHeaders(endpoint, token), url,\\n        error;\\n\\n    try {\\n      url = constructURL(endpoint, id);\\n      response = await execRequest('GET', url, headers);\\n      let payload = response.payload;\\n\\n      if(response.isOK) {\\n        dispatch(storePayload(nextAction, payload));\\n      }\\n      else {\\n        if(response.status === 401) {\\n          dispatch(storePayload(LOG_OUT));\\n          error = {\\n            ...error_descr['401'],\\n            ...{\\n              extra_data: endpoint,\\n              original: response.payload,\\n            },\\n          };\\n        }\\n        else {\\n          error = {\\n            ...error_descr.request,\\n            ...{\\n              extra_data: endpoint,\\n              original: response.payload,\\n            },\\n          };\\n        }\\n        dispatch(storeError(error));\\n      }\\n      dispatch(toggleLoader(endpoint, false));\\n    } catch(err) {\\n      error = {\\n        ...error_descr.request,\\n        ...{\\n          extra_data: endpoint,\\n          original: { error: err },\\n        },\\n      };\\n      dispatch(storeError(error));\\n    }\\n  };\\n};\\n\")))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 28:56 file=./code_examples/coverages_reducer.1.1.js\",\n    \"showNumbers\": true,\n    \"28:56\": true,\n    \"file\": \"./code_examples/coverages_reducer.1.1.js\"\n  }), \"// coverages reducer\\n// @flow\\nimport _collection from 'lodash/collection';\\nimport {\\n  STORE_COVERAGES,\\n  LOG_OUT,\\n} from '../actions/types';\\nimport { formatDate } from '../lib/commonHelpers';\\n\\ntype Coverage = {\\n  id: string,\\n  numOfBags: number,\\n  reservedAt: string,\\n  reservedAtReceived: string,\\n  hospitalName: string,\\n};\\ntype CoveragesList = Array<Coverage>;\\ntype CoveragesInitial = {};\\ntype CoveragesEmpty = [];\\ntype Coverages = CoveragesList | CoveragesInitial | CoveragesEmpty;\\n\\n\\nconst parseServerResponse = (serverPayload): CoveragesList => {\\n  ...\\n  return coverages;\\n};\\n\\nexport default function coveragesReducer(state = {}, action: any): Coverages {\\n  switch (action.type) {\\n  case STORE_COVERAGES:\\n    const data = parseServerResponse(action.payload);\\n\\n    return _collection.orderBy(data, ['reservedAtReceived'], ['desc']);\\n  case LOG_OUT:\\n      return {};\\n  default:\\n    return state;\\n  }\\n};\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 10:20,28 file=./code_examples/coverages_reducer.1.1.js\",\n    \"showNumbers\": true,\n    \"10:20,28\": true,\n    \"file\": \"./code_examples/coverages_reducer.1.1.js\"\n  }), \"// coverages reducer\\n// @flow\\nimport _collection from 'lodash/collection';\\nimport {\\n  STORE_COVERAGES,\\n  LOG_OUT,\\n} from '../actions/types';\\nimport { formatDate } from '../lib/commonHelpers';\\n\\ntype Coverage = {\\n  id: string,\\n  numOfBags: number,\\n  reservedAt: string,\\n  reservedAtReceived: string,\\n  hospitalName: string,\\n};\\ntype CoveragesList = Array<Coverage>;\\ntype CoveragesInitial = {};\\ntype CoveragesEmpty = [];\\ntype Coverages = CoveragesList | CoveragesInitial | CoveragesEmpty;\\n\\n\\nconst parseServerResponse = (serverPayload): CoveragesList => {\\n  ...\\n  return coverages;\\n};\\n\\nexport default function coveragesReducer(state = {}, action: any): Coverages {\\n  switch (action.type) {\\n  case STORE_COVERAGES:\\n    const data = parseServerResponse(action.payload);\\n\\n    return _collection.orderBy(data, ['reservedAtReceived'], ['desc']);\\n  case LOG_OUT:\\n      return {};\\n  default:\\n    return state;\\n  }\\n};\\n\")))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 19,21,23 file=./code_examples/combine_reducers.1.1.js\",\n    \"showNumbers\": true,\n    \"19,21,23\": true,\n    \"file\": \"./code_examples/combine_reducers.1.1.js\"\n  }), \"import { combineReducers } from 'redux';\\nimport { reducer as formReducer } from 'redux-form';\\nimport captchaReducer from './captchaReducer';\\nimport donationsReducer from './donationsReducer';\\nimport coveragesReducer from './coveragesReducer';\\nimport messageReducer from './messageReducer';\\nimport loadersReducer from './loadersReducer';\\nimport userReducer from './userReducer';\\nimport userIdentificationReducer from './userIdentificationReducer';\\nimport alertReducer from './alertReducer';\\nimport nextDonationReducer from './nextDonationReducer';\\nimport donorCardsReducer from './donorCardsReducer';\\nimport previousRecordsReducer from './previousRecordsReducer';\\n\\nexport default combineReducers({\\n  form: formReducer,\\n  captcha: captchaReducer,\\n  donations: donationsReducer,\\n  coverages: coveragesReducer,\\n  message: messageReducer,\\n  loaders: loadersReducer,\\n  user: userReducer,\\n  userIdentification: userIdentificationReducer,\\n  alert: alertReducer,\\n  nextDonation: nextDonationReducer,\\n  donorCards: donorCardsReducer,\\n  previousRecords: previousRecordsReducer,\\n});\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 24:26 file=./code_examples/Coverages_container.1.2.js\",\n    \"showNumbers\": true,\n    \"24:26\": true,\n    \"file\": \"./code_examples/Coverages_container.1.2.js\"\n  }), \"// Coverages container\\nimport React from 'react';\\n...\\n\\nclass Coverages extends Screen {\\n\\n  componentDidMount() {\\n    const { id, token } = this.props.userIdentification;\\n\\n    this.props.getCoverages(STORE_COVERAGES, token, id);\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    ...\\n  }\\n\\n  render() {\\n    ...\\n  }\\n\\n};\\n\\nconst mapStateToProps = state => ({\\n  coverages: state.coverages,\\n  loaders: state.loaders,\\n  userIdentification: state.userIdentification,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n  // thunk creators\\n  getCoverages: (nextAction, token, id) => {\\n    dispatch(actions.toggleLoader('coverages', true));\\n    dispatch(actions.fetchData('coverages', nextAction, token, id));\\n  },\\n});\\n\\nconst exportedCoverages = connect(mapStateToProps, mapDispatchToProps)(Coverages);\\n\\nconst styles = StyleSheet.create({\\n  ...\\n});\\n\\nexport default exportedCoverages;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers file=./code_examples/combine_reducers.1.1.js\",\n    \"showNumbers\": true,\n    \"file\": \"./code_examples/combine_reducers.1.1.js\"\n  }), \"import { combineReducers } from 'redux';\\nimport { reducer as formReducer } from 'redux-form';\\nimport captchaReducer from './captchaReducer';\\nimport donationsReducer from './donationsReducer';\\nimport coveragesReducer from './coveragesReducer';\\nimport messageReducer from './messageReducer';\\nimport loadersReducer from './loadersReducer';\\nimport userReducer from './userReducer';\\nimport userIdentificationReducer from './userIdentificationReducer';\\nimport alertReducer from './alertReducer';\\nimport nextDonationReducer from './nextDonationReducer';\\nimport donorCardsReducer from './donorCardsReducer';\\nimport previousRecordsReducer from './previousRecordsReducer';\\n\\nexport default combineReducers({\\n  form: formReducer,\\n  captcha: captchaReducer,\\n  donations: donationsReducer,\\n  coverages: coveragesReducer,\\n  message: messageReducer,\\n  loaders: loadersReducer,\\n  user: userReducer,\\n  userIdentification: userIdentificationReducer,\\n  alert: alertReducer,\\n  nextDonation: nextDonationReducer,\\n  donorCards: donorCardsReducer,\\n  previousRecords: previousRecordsReducer,\\n});\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"showNumbers 8,23:27 file=./code_examples/Coverages_container.1.2.js\",\n    \"showNumbers\": true,\n    \"8,23:27\": true,\n    \"file\": \"./code_examples/Coverages_container.1.2.js\"\n  }), \"// Coverages container\\nimport React from 'react';\\n...\\n\\nclass Coverages extends Screen {\\n\\n  componentDidMount() {\\n    const { id, token } = this.props.userIdentification;\\n\\n    this.props.getCoverages(STORE_COVERAGES, token, id);\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    ...\\n  }\\n\\n  render() {\\n    ...\\n  }\\n\\n};\\n\\nconst mapStateToProps = state => ({\\n  coverages: state.coverages,\\n  loaders: state.loaders,\\n  userIdentification: state.userIdentification,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n  // thunk creators\\n  getCoverages: (nextAction, token, id) => {\\n    dispatch(actions.toggleLoader('coverages', true));\\n    dispatch(actions.fetchData('coverages', nextAction, token, id));\\n  },\\n});\\n\\nconst exportedCoverages = connect(mapStateToProps, mapDispatchToProps)(Coverages);\\n\\nconst styles = StyleSheet.create({\\n  ...\\n});\\n\\nexport default exportedCoverages;\\n\")))), mdx(\"hr\", null), mdx(SlideHeadline, {\n    sectionTitle: \"\\u03A0\\u03C1\\u03BF\\u03C4\\u03AC\\u03C3\\u03B5\\u03B9\\u03C2\",\n    mdxType: \"SlideHeadline\"\n  }, \"\\u0391\\u03C0\\u03CC \\u03C0\\u03BF\\u03C5 \\u03BE\\u03B5\\u03BA\\u03B9\\u03BD\\u03AC\\u03C9;\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u039F\\u03B4\\u03B7\\u03B3\\u03CC\\u03C2 \\u03B1\\u03C0\\u03CC \\u03C4\\u03B1 docs: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/getting-started.html\"\n  }), \"https://reactjs.org/docs/getting-started.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u0394\\u03BF\\u03BA\\u03B9\\u03BC\\u03AC\\u03B6\\u03C9 \\u03BD\\u03B1 \\u03C6\\u03C4\\u03B9\\u03AC\\u03BE\\u03C9 \\u03BA\\u03AC\\u03C4\\u03B9 \\u03BC\\u03B5 create-react-app: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://create-react-app.dev/docs/getting-started/\"\n  }), \"https://create-react-app.dev/docs/getting-started/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Style: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://material-ui.com/\"\n  }), \"https://material-ui.com/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Blog posts, tutorials, videos...\")), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      alignText: 'center',\n      flex: 1,\n      width: '100%'\n    }\n  }, mdx(\"h1\", null, \"The End!\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"3804c1a1-1c6e-5a95-8632-d25a3ed2da90","slug":"/react-notes-greek","title":"The End!"}}}